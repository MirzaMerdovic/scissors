name: Scissors CI
on:
  push:
    branches:
      - branch-zero
  pull_request:

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Sonar Begin
        shell: pwsh
        run: >
          .\.sonar\scanner\dotnet-sonarscanner begin
          /k:"MirzaMerdovic_HttpRequestInterceptor"
          /o:"mimme"
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          /d:sonar.host.url="https://sonarcloud.io"
          /d:sonar.cs.opencover.reportsPaths=".\_TMP\*\coverage.opencover.xml"
          /d:sonar.coverage.exclusions="**Test*.cs"
      - name: Test
        uses: rocklan/dotnet-tests-report@master
        with:
          project_path: .\src\scissors.sln
          report_name: scissors_test_report
          report_title: Scissors Tests Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          gist_name: scissors_tests.md
          gist_badge_label: 'Tests passed: %Counters_passed%/%Counters_total%'
          gist_token: ${{ secrets.GIST_TOKEN }}
          set_check_status_from_test_outcome: true
          fail_build_on_failed_tests: true
          extra_test_parameters: '--configuration release --collect:"XPlat Code Coverage" --settings .\src\Scissors.Test\runsettings.xml'

      - name: Sonar End
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Create nupkg
        shell: pwsh
        run: |
          cd src\Scissors
          dotnet pack --configuration Release

      - name: Publish nupkg package to GitHub
        shell: pwsh
        run: |
          cd src\Scissors
          dotnet nuget push ".\bin\Release\*.nupkg" --source "https://nuget.pkg.github.com/MirzaMerdovic/index.json" --api-key "${{ secrets.SCISSORS_PAT }}" --skip-duplicate

      - name: Publish nupkg package to Nuget
        shell: pwsh
        run: |
          cd src\Scissors
          dotnet nuget push ".\bin\Release\*.nupkg" --source https://api.nuget.org/v3/index.json --api-key "${{ secrets.NUGET_API_KEY }}" --skip-duplicate